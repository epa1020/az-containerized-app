name: cd-example-az-app
run-name: CD example az app
on:
  push:
    branches:
      - master
env: 
  BASE_RG: awesome-customer
  BASE_APPNAME: ac-frontend-ca
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      imagename: ${{ steps.publish-image-name.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '11'
          cache: 'maven'
      - name: Build Unit Testing
        run: mvn test
      - name: Build with Maven
        run: mvn clean package --file pom.xml
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - id: build-image
        run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/example-az-app:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/example-az-app:${{ github.sha }}
      - id: publish-image-name
        run: |
              echo "image=example-az-app:${{ github.sha }}" >> $GITHUB_OUTPUT
  dev:
    runs-on: ubuntu-latest
    environment: dev-env
    needs: build
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - id: publish-image-name
        run: |
              az containerapp update \
              --name ${{ env.BASE_APPNAME }}  \
              --resource-group ${{ env.BASE_RG }} \
              --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{needs.build.outputs.image}}